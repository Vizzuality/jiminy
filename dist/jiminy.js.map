{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 76127fc1aa6eed1e3414","webpack:///./src/index.js","webpack:///./src/dataset.js","webpack:///./src/utils.js","webpack:///./src/fields.js","webpack:///./src/field.js","webpack:///./src/type.js","webpack:///external {\"root\":\"dl\",\"commonjs2\":\"datalib\",\"commonjs\":\"datalib\",\"amd\":\"datalib\"}","webpack:///./src/stattype.js","webpack:///./src/charts.js","webpack:///./src/chart.js"],"names":[],"mappings":"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","file":"jiminy.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"datalib\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"datalib\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Jiminy\"] = factory(require(\"datalib\"));\n\telse\n\t\troot[\"Jiminy\"] = factory(root[\"dl\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_6__) {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 76127fc1aa6eed1e3414\n **/","'use strict';\n\nimport Dataset from 'dataset';\nimport Fields from 'fields';\nimport Charts from 'charts';\n\nexport default class Jiminy {\n\n  constructor(json) {\n    this._dataset = new Dataset(json);\n    this._fields = new Fields(this._dataset);\n  }\n\n  get name()    { return 'Jiminy'; }\n  get version() { return '0.0.1'; }\n\n  /* If fieldNames is present, only return the charts that can be obtained by\n   * the combination of the passed column names. Otherwise, return the types of\n   * charts that can be obtained with any of the columns of the dataset.\n   * NOTE: if fieldNames is set and contains several names, it won't return the\n   * charts obtained with just one of the specified columns. */\n  recommendation(fieldNames) {\n    let fields = [];\n    let allColumnsInclusive = false; /* All the columns must be used */\n\n    if(fieldNames !== null && fieldNames !== undefined) {\n      if(!Array.isArray(fieldNames)) {\n        throw new Error('Jiminy: recommendation should be called without any ' +\n          'parameter or with an array of column names.');\n      } else if(fieldNames.length) {\n        allColumnsInclusive = true;\n        fields = this._fields.get(fieldNames);\n      }\n    }\n\n    if(!fields.length) fields = this._fields.fields;\n\n    const options = {\n      allInclusive: allColumnsInclusive\n    };\n\n    this._availableCharts = new Charts().getAvailable(fields, options);\n    return this._availableCharts.map(function(chart) {\n      return chart.name;\n    });\n  }\n\n  /* Return the columns that can be used to compute the chart. If chartName\n   * doesn't correspond to any chart or isn't available, throw an error. */\n  columns(chartName, columnName) {\n    if(!chartName) {\n      throw new Error('Jiminy: columns expects the name of the chart as first argument.');\n    }\n\n    const chart = new Charts().getChart(chartName);\n\n    if(!chart) {\n      throw new Error(`${chartName} isn't a valid chart name. ` +\n        'Check the documentation to see existing types of charts.');\n    }\n\n    if(columnName !== null && columnName !== undefined &&\n      typeof columnName !== 'string') {\n      throw new Error('Jiminy: The second parameter of columns must be a string.');\n    }\n\n    /* We want the suggestions for the first column */\n    if(!columnName) {\n      return chart.computeUsefulFields(this._fields.fields).map((field) => {\n        return field.name;\n      });\n    }\n\n    /* We want the suggestions for the second one */\n\n    /* We check if the name of the column exists */\n    if(!~this._dataset.getColumnNames().indexOf(columnName)) {\n      throw new Error(`Unable to find the column \"${columnName}\" inside the dataset`);\n    }\n\n    const field = this._fields.get([ columnName ])[0];\n\n    return chart.computeUsefulFields(this._fields.fields, field).map((field) => {\n      return field.name;\n    });\n\n  }\n};\n\nmodule.exports = exports['default'];\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/","'use strict';\n\nimport utils from 'utils';\n\nexport default class Dataset  {\n\n  constructor(dataset) {\n    this._data = dataset;\n    if(!this.valid) {\n      throw new Error('Jiminy: The dataset must be a non-empty array.');\n    }\n  }\n\n  get data() { return this._data; }\n\n  get valid() {\n    return this._data && Array.isArray(this._data) && this._data.length > 0;\n  }\n\n  /* Return the first valid value of the column named fieldName */\n  getFirstValidValue(fieldName) {\n    for(let i = 0, j = this._data.length; i < j; i++) {\n      let value = this._data[i][fieldName];\n\n      if(this._validValue(value)) return value;\n    }\n    return null;\n  }\n\n  /* Return true if the column contains at least 5 different valid values */\n  atLeast5DistinctValues(fieldName) {\n    let values = [];\n\n    for(let i = 0, j = this._data.length; i < j; i++) {\n      let value = this._data[i][fieldName];\n\n      if(this._validValue(value) && !~values.indexOf(value)) values.push(value);\n      if(values.length >= 5) return true;\n    }\n\n    return false;\n  }\n\n  /* Return the name of the columns from the first row */\n  getColumnNames() {\n    let row = this._data[0];\n    let columns = [];\n\n    for(let column in row) {\n      columns.push(column);\n    }\n\n    return columns;\n  }\n\n  /* Return true if the passed value is different from null, undefined and\n   * NaN */\n  _validValue(value) {\n    return value !== null && value !== undefined && !utils.isNaN(value) &&\n      !Array.isArray(value) && !(typeof value === 'object');\n  }\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/dataset.js\n **/","'use strict';\n\nexport default {\n\n  /* More robust version of isNaN\n   * See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN\n   */\n  isNaN(value) {\n    if(Number.isNaN) {\n      return Number.isNaN(value);\n    }\n\n    return typeof value === 'number' && isNaN(value);\n  }\n\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/utils.js\n **/","'use strict';\n\nimport Field from 'field';\n\nexport default class Fields {\n\n  constructor(dataset) {\n    if(!dataset || !dataset.valid) {\n      throw new Error('Jiminy: Fields expects a valid dataset');\n    } else {\n      this._fields = this.computeFields(dataset);\n    }\n  }\n\n  get fields() { return this._fields; }\n\n  /* Return the fields of the dataset */\n  computeFields(dataset) {\n    let columnNames = dataset.getColumnNames();\n    let fields = [];\n\n    for(let i = 0, j = columnNames.length; i < j; i++) {\n      fields.push(new Field(columnNames[i], dataset));\n    }\n\n    return fields;\n  }\n\n  /* Return the fields corresponding to each fieldNames. If one can't be found,\n   * emit a warning in the console. If no one can be found, return an empty\n   * array. */\n  get(fieldNames) {\n    let fields = [];\n\n    for(let i = 0, j = fieldNames.length; i < j; i++) {\n      let fieldName = fieldNames[i];\n      let field = this._getField(fieldName);\n\n      if(field) fields.push(field);\n      else console.warn(`Unable to find the column \"${fieldName}\" inside the dataset.`);\n    }\n\n    return fields;\n  }\n\n  /* Return the field matching the name passed as argument if exist, null\n   * otherwise */\n  _getField(fieldName) {\n    for(let i = 0, j = this._fields.length; i < j; i++) {\n      if(this.fields[i].name === fieldName) {\n        return this._fields[i];\n      }\n    }\n\n    return null;\n  }\n\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/fields.js\n **/","'use strict';\n\nimport Type from 'type';\nimport StatType from 'stattype';\n\nexport default class Field {\n\n  constructor(name, dataset) {\n    if(!name || !dataset || !dataset.valid) {\n      throw new Error('Jiminy: Fields must be instanciated with a name and with the ' +\n       'dataset');\n    }\n\n    this._name     = name;\n    this._type     = new Type(name, dataset);\n    this._stats    = this._computeStats(dataset);\n    this._statType = new StatType(this._type, this._stats);\n  }\n\n  get name() { return this._name; }\n  get type() { return this._type; }\n  get statType() { return this._statType; }\n\n  /* Return some statistics about the field */\n  _computeStats(dataset) {\n    return {\n      atLeast5DistinctValues: dataset.atLeast5DistinctValues(this._name)\n    };\n  }\n\n  equals(o) {\n    return o.constructor && o.constructor === this.constructor &&\n      o.name === this._name && o.type.equals(this._type) &&\n      o.statType.equals(this._statType);\n  }\n\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/field.js\n **/","'use strict';\n\nimport dl from 'datalib';\nimport utils from 'utils';\n\nconst TYPES = [ 'number', 'integer', 'string', 'date', 'boolean' ];\n\nexport default class Type {\n\n  constructor(fieldName, dataset) {\n    this._types = TYPES;\n\n    if(!dl) {\n      throw new Error('Jiminy: Make sure to include the dependency \\'datalib\\'');\n    }\n\n    if(fieldName && dataset && dataset.valid) {\n      this._name = this._inferType(fieldName, dataset);\n    } else {\n      throw new Error('Jiminy: A type requires the dataset and the field name.');\n    }\n\n  }\n\n  get name() { return this._name; }\n\n  get isNumber()  { return this._types.indexOf(this._name) === 0; }\n  get isInteger() { return this._types.indexOf(this._name) === 1; }\n  get isString()  { return this._types.indexOf(this._name) === 2; }\n  get isDate()    { return this._types.indexOf(this._name) === 3; }\n  get isBoolean() { return this._types.indexOf(this._name) === 4; }\n\n  /* Infer the type of the column by checking the first row whose value is\n   * valid. If no value can be inferred, the type will be set to a string by\n   * default. */\n  _inferType(fieldName, dataset) {\n    let sampleValue = dataset.getFirstValidValue(fieldName);\n\n    return sampleValue !== null ? dl.type.infer([ sampleValue ]) :\n      this._types[2];\n  }\n\n  /* Return true if the passed value is different from null, undefined and\n   * NaN */\n  _validValue(value) {\n    return value !== null && value !== undefined && !utils.isNaN(value);\n  }\n\n  equals(o) {\n    return o.constructor && o.constructor === this.constructor &&\n      o.name === this._name;\n  }\n\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/type.js\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_6__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external {\"root\":\"dl\",\"commonjs2\":\"datalib\",\"commonjs\":\"datalib\",\"amd\":\"datalib\"}\n ** module id = 6\n ** module chunks = 0\n **/","'use strict';\n\nconst TYPES = [ 'quantitative', 'nominal', 'ordinal', 'temporal' ];\n\nexport default class StatType {\n\n  /* An instance can be created or with a type (number, string, etc.) and stats\n   * about that column, or directly the name of the statistical type */\n  constructor(type, stats) {\n    this._types = TYPES;\n\n    if(type && stats && stats.hasOwnProperty('atLeast5DistinctValues')) {\n      this._name = this._inferType(type, stats);\n    } else {\n      throw new Error('Jiminy: Statistical types must be instanciated with the ' +\n        'field\\'s type and the stats.');\n    }\n  }\n\n  get types() { return this._types; }\n  get name() { return this._name; }\n\n  get isQuantitative() { return this._name === this._types[0]; }\n  get isNominal()      { return this._name === this._types[1]; }\n  get isOrdinal()      { return this._name === this._types[2]; }\n  get isTemporal()     { return this._name === this._types[3]; }\n\n  /* Infer the statistical type depending on the type of data and the statistics\n   * of the field */\n  _inferType(type, stats) {\n    let statType = this._types[2];\n\n    if(type.isBoolean || type.isString) {\n      statType = this._types[1];\n    } else if(type.isDate) {\n      statType = this._types[3];\n    } else if((type.isNumber || type.isInteger) &&\n      stats.atLeast5DistinctValues) {\n      statType = this._types[0];\n    }\n\n    return statType;\n  }\n\n  equals(o) {\n    return o.constructor && o.constructor === this.constructor &&\n      o.name === this._name;\n  }\n\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/stattype.js\n **/","'use strict';\n\nimport Chart from 'chart';\n\nconst CONFIG = [\n  {\n    name: 'bar',\n    acceptedStatTypes: [\n      [ 'nominal' ],\n      [ 'ordinal' ],\n      [ 'quantitative', 'nominal' ],\n      [ 'quantitative', 'temporal' ],\n      [ 'quantitative', 'ordinal' ]\n    ]\n  },\n  {\n    name: 'line',\n    acceptedStatTypes: [\n      [ 'quantitative', 'temporal' ],\n      [ 'quantitative', 'ordinal' ]\n    ]\n  },\n  {\n    name: 'pie',\n    acceptedStatTypes: [\n      [ 'nominal' ],\n      [ 'ordinal' ]\n    ]\n  },\n  {\n    name: 'scatter',\n    acceptedStatTypes: [\n      [ 'quantitative', 'quantitative' ],\n      [ 'nominal', 'nominal' ],\n      [ 'nominal', 'ordinal' ],\n      [ 'ordinal', 'ordinal' ]\n    ]\n  },\n  {\n    name: '1d_scatter',\n    acceptedStatTypes: [\n      [ 'quantitative' ],\n      [ 'temporal' ]\n    ]\n  },\n  {\n    name: '1d_tick',\n    acceptedStatTypes: [\n      [ 'quantitative' ],\n      [ 'temporal' ]\n    ]\n  }\n];\n\nexport default class Charts {\n\n  constructor() {\n    this._config = CONFIG;\n    this._charts = this._createCharts();\n  }\n\n  get charts() { return this._charts; }\n\n  /* Create the Chart instances */\n  _createCharts() {\n    let charts = [];\n\n    for(let i = 0, j = this._config.length; i < j; i++) {\n      charts.push(new Chart(this._config[i]));\n    }\n\n    return charts;\n  }\n\n  /* Return the available charts according to the available fields.\n   * Options can contain:\n   *  - allInclusive (boolean): the charts must be computed with all the columns\n   *    (not just some of them)\n   */\n  getAvailable(fields, options) {\n    let available = [];\n\n    options = options || {};\n\n    if(!fields || !fields.length) {\n      throw new Error('Jiminy: At least one field is required to compute the available charts.');\n    }\n\n    for(let i = 0, j = this._charts.length; i < j; i++) {\n      const options = {};\n\n      if(options.allInclusive) options.allInclusive = true;\n\n      if(this._charts[i].isAvailable(fields, options)) {\n        available.push(this._charts[i]);\n      }\n    }\n\n    return available;\n  }\n\n  /* Return the chart called chartName if exists, null otherwise */\n  getChart(chartName) {\n    for(let i = 0, j = this._charts.length; i < j; i++) {\n      if(this._charts[i].name === chartName) return this._charts[i];\n    }\n    return null;\n  }\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/charts.js\n **/","'use strict';\n\nexport default class Chart {\n\n  constructor(config) {\n    if(!config || !config.hasOwnProperty('name') ||\n      !config.hasOwnProperty('acceptedStatTypes')) {\n      throw new Error('Jiminy: Charts must be instanciated with a correct ' +\n       'configuration ie. with a name and a list of accepted statistical ' +\n       'types.');\n    } else {\n      this._name = config.name;\n      this._acceptedStatTypes = config.acceptedStatTypes;\n    }\n  }\n\n  get name() { return this._name; }\n  get acceptedStatTypes() { return this._acceptedStatTypes; }\n\n  /* Return true if the chart can be rendered depending on the fields available\n   * and the statistical types required by the chart\n   * Options can contain:\n   *  - allInclusive (boolean): the charts must be computed with all the columns\n   *    (not just some of them)\n   */\n  isAvailable(fields, options) {\n    let available = false;\n\n    options = options || {};\n\n    /* We search if the fields exactly match the one of the combination of the\n     * accepted statistical types */\n    if(options.allInclusive) {\n      for(let i = 0, j = this._acceptedStatTypes.length; i < j; i++) {\n        let condition = this._acceptedStatTypes[i];\n\n        if(condition.length === fields.length) {\n          /* If the requirement is just one statistical type  */\n          if(condition.length === 1) {\n            available = this._existFields(fields, condition[0], 1) &&\n              !this._existFields(fields, condition[0], 2);\n          } else {\n            /* If the requirement are two same statistical types */\n            if(condition[0] === condition[1]) {\n              available = this._existFields(fields, condition[0], 2) &&\n                !this._existFields(fields, condition[0], 3);\n\n            /* If the requirement are two different statistical types */\n            } else {\n              available = this._existFields(fields, condition[0], 1) &&\n                !this._existFields(fields, condition[0], 2) &&\n                this._existFields(fields, condition[1], 1) &&\n                !this._existFields(fields, condition[1], 2);\n            }\n          }\n        }\n\n        if(available) break;\n      }\n\n    /* We search if among the fields there are enough of specific the\n     * statistical types for at least one of the combinations accepted by the\n     * chart */\n    } else {\n      for(let i = 0, j = this._acceptedStatTypes.length; i < j; i++) {\n        let condition = this._acceptedStatTypes[i];\n\n        /* If the requirement is just one statistical type  */\n        if(condition.length === 1) {\n          available = this._existFields(fields, condition[0], 1);\n        } else {\n          /* If the requirement are two same statistical types */\n          if(condition[0] === condition[1]) {\n            available = this._existFields(fields, condition[0], 2);\n\n          /* If the requirement are two different statistical types */\n          } else {\n            available = this._existFields(fields, condition[0], 1) &&\n              this._existFields(fields, condition[1], 1);\n          }\n        }\n\n        if(available) break;\n      }\n    }\n\n    return available;\n  }\n\n  /* Return the string with its first letter capitalized */\n  _capitalize(string) {\n    return string ? string[0].toUpperCase() + string.slice(1, string.length) :\n      string;\n  }\n\n  /* Return true if among the fields, there are at least count ones of the\n   * specified statistical type */\n  _existFields(fields, statTypeName, count) {\n    return fields.filter(function(field) {\n      return field.statType['is' + this._capitalize(statTypeName)];\n    }.bind(this)).length >= count;\n  }\n\n  /* Return among the passed fields, the ones that can be used to compute the\n   * chart, taking into account that each of them will be able to generate the\n   * chart by its own, or could be combined with another one to do so.\n   * If a field is also passed, then return all the fields than can be combined\n   * with it to render the chart. If the chart can only be rendered with the\n   * field by its own, or couldn't be rendered at all with the passed field,\n   * return an empty array. */\n  computeUsefulFields(fields, selectedField) {\n    return fields.filter((field) => {\n      let isUseful = false;\n\n      for(let i = 0, j = this._acceptedStatTypes.length; i < j; i++) {\n        const acceptedStatType = this._acceptedStatTypes[i];\n\n        if(acceptedStatType.length === 1) {\n          isUseful = !selectedField &&\n            acceptedStatType[0] === field.statType.name;\n        } else {\n          if(acceptedStatType[0] === acceptedStatType[1]) {\n            isUseful = acceptedStatType[0] === field.statType.name &&\n              this._existFields(fields, acceptedStatType[0], 2) &&\n              (!selectedField || selectedField &&\n              selectedField.name !== field.name);\n          } else {\n            if(!selectedField) {\n              isUseful = acceptedStatType[0] === field.statType.name &&\n                this._existFields(fields, acceptedStatType[1], 1);\n            } else {\n              isUseful = (acceptedStatType[0] === field.statType.name &&\n                this._existFields(fields, acceptedStatType[1], 1) &&\n                selectedField.statType.name === acceptedStatType[1] ||\n                acceptedStatType[1] === field.statType.name &&\n                this._existFields(fields, acceptedStatType[0], 1) &&\n                selectedField.statType.name === acceptedStatType[0]);\n            }\n          }\n        }\n\n        if(isUseful) break;\n      }\n\n      return isUseful;\n\n    });\n  }\n\n  equals(o) {\n    return o.constructor && o.constructor === this.constructor &&\n      o.name === this._name &&\n      o.acceptedStatTypes === this._acceptedStatTypes;\n  }\n\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/chart.js\n **/"],"sourceRoot":""}